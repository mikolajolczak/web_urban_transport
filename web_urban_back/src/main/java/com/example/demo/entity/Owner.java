package com.example.demo.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.ForeignKey;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 * Represents an Owner entity in the system.
 *
 * <p>An Owner can have multiple Offices. Contains personal information
 * such as name, surname, phone, and email.</p>
 */
@Entity
@Table(name = "OWNERS")
public class Owner {

  /**
   * The unique identifier of the Owner.
   *
   * <p>This is the primary key and is automatically generated by the database.
   * </p>
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private int id;

  /**
   * The first name of the Owner.
   *
   * <p>Cannot be null.
   * </p>
   */
  @Column(nullable = false)
  private String name;

  /**
   * The surname (last name) of the Owner.
   *
   * <p>Cannot be null.
   * </p>
   */
  @Column(nullable = false)
  private String surname;

  /**
   * The contact phone number of the Owner.
   *
   * <p>Cannot be null.
   * </p>
   */
  @Column(nullable = false)
  private String phone;

  /**
   * The email address of the Owner.
   *
   * <p>Cannot be null.
   * </p>
   */
  @Column(nullable = false)
  private String email;

  /**
   * The Office associated with the Owner.
   *
   * <p>This represents a one-to-many relationship, where multiple offices
   * can belong to the same owner. Cannot be null.
   * </p>
   */
  @OneToMany
  @JoinColumn(name = "OFFICE_ID", nullable = false,
      foreignKey = @ForeignKey(name = "FK_OWNER_OFFICE"))
  private Office office;
}
